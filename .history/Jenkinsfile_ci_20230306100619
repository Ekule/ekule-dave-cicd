def COLOR_MAP
       'SUCCESS': 'good',
       'FAILURE': 'danger',
pipeline {  
    agent any
    tools {
        maven "maven3"
        jdk "davjdk8"
    }
    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "172.31.18.75:8081"
        SNAP_REPO = "dave-snapshot"
        RELEASE_REPO= "dave-release"
        NEXUS_USER = "admin"
        NEXUS_PASS = "ayuk1234"
        CENTRAL_REPO = "maven-central-repo"
        NEXUS_GRP_REPO = "dave-group-repo"
        NEXUSIP = "172.31.18.75"
        NEXUSPORT = "8081"
        NEXUS_CREDENTIAL_ID = "nexuslogin"
        SONARSCANNER = "sonarscanner"
        SONARSERVER = "sonarserver"
    }
    
    stages {
        stage('Build') {
            steps {
                sh  'mvn -s settings.xml clean install -U'
            }
            post {
                success {
                    echo 'Archiving'
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
stage('unit test') {
            steps {
                sh  'mvn  -s settings.xml test'
            }
    }
    stage ('checkstyle code analysis') {
            steps {
                sh  'mvn -s settings.xml checkstyle:checkstyle'
            }
        }
        stage('code analysis with sonarqube') {
          environment {
             scannerHome = tool "${sonarscanner}"
          }

          steps {
            withSonarQubeEnv("${sonarserver}") {
               sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=davepro-sonar \
                   -Dsonar.projectName=davpro-sonar \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
            }

            
          }
        }
stage('quality Gate') {
            steps  {
               timeout(time: 1, unit: 'HOURS') {
               waitForQualityGate abortPipeline: true
               }  
            }
        }
    stage('upload artifacts to nexus'){
            steps {
                 nexusArtifactUploader(
        nexusVersion: 'nexus3',
        protocol: 'http',
        nexusUrl: "${NEXUSIP}:${NEXUSPORT}",
        groupId: 'QA',
        version:  "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
        repository: "${RELEASE_REPO}",
        credentialsId: "${NEXUS_LOGIN}",
        artifacts: [
            [
            artifactId: 'davapp',
            classifier: '',
            file: 'target/davpro-sonar-v1.war',
            type: 'war'
            ]
        ]
     )
            }
        }
    }
    post {
        always {
            echo 'slack notification.',
            slackSend channel: '#davci-proj',
            color: COLOR_MAP[currentBui]
        }
    }
}